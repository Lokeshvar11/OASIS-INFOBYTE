X = df.drop('VALUE', axis=1).values
y = df['VALUE'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

print('Mean Squared Error:', mean_squared_error(y_test, y_pred))

df.info()
df['DATE'] = pd.to_datetime(df['DATE'])
df['MONTH'] = df['DATE'].dt.month
df['YEAR'] = df['DATE'].dt.year
df['SERIES_ID'] = df['SERIES_ID'].str.replace('LNU04000000', '')

plt.figure(figsize=(10,5))
sns.lineplot(data=df, x='DATE', y='VALUE', hue='SERIES_ID')
plt.title('Unemployment Rate Over Time')
plt.xlabel('Year')
plt.ylabel('Unemployment Rate')
plt.show()

X = df.drop('VALUE', axis=1).values
y = df['VALUE'].values
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)
regressor = LinearRegression()
regressor.fit(X_train, y_train)
y_pred = regressor.predict(X_test)
print('Mean Squared Error:', mean_squared_error(y_test, y_pred))

------------------------------------------------------------

Following the procedures below :


import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

df = pd.read_csv('your_downloaded_dataset.csv')

df.info()
df['DATE'] = pd.to_datetime(df['DATE'])
df['MONTH'] = df['DATE'].dt.month
df['YEAR'] = df['DATE'].dt.year
df['SERIES_ID'] = df['SERIES_ID'].str.replace('LNU04000000', '')

plt.figure(figsize=(10,5))
sns.lineplot(data=df, x='DATE', y='VALUE', hue='SERIES_ID')
plt.title('Unemployment Rate Over Time')
plt.xlabel('Year')
plt.ylabel('Unemployment Rate')
plt.show()

X = df.drop('VALUE', axis=1).values
y = df['VALUE'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

print('Mean Squared Error:', mean_squared_error(y_test, y_pred))
